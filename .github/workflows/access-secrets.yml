name: Fetch Secrets from AWS Secrets Manager

on:
  push:
    branches:
      - main

permissions:
  id-token: write        # allow OIDC token exchange
  contents: read         # needed to clone your repo

jobs:
  fetch-secret:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GHA_SecretReader
          aws-region: eu-west-1

      - name: Install AWS CLI (if not already available)
        run: |
          if ! command -v aws &> /dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi

      - name: Fetch secret value
        id: get_secret
        run: |
          SECRET_NAME="prod/db/credentials"
          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id "$SECRET_NAME" \
            --query SecretString \
            --output text)
          echo "Retrieved secret for $SECRET_NAME"
          # Save to a file or export as env var:
          echo "$SECRET_JSON" > secret.json
          echo "::set-output name=db_creds::$SECRET_JSON"

      - name: Use the secret in your workflow
        run: |
          # If you stored JSON in secret.json:
          DB_USER=$(jq -r '.username' secret.json)
          DB_PASS=$(jq -r '.password' secret.json)
          echo "Connecting as $DB_USER (password length: ${#DB_PASS})"
          # e.g., run tests or deploy using these credentials
